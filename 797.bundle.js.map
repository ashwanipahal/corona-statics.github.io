{"version":3,"sources":["webpack://CoronaStatics/./src/components/features/CoronaListView/style.scss?a1c8","webpack://CoronaStatics/./src/components/features/CoronaListView/CoronaListView.tsx","webpack://CoronaStatics/./src/components/features/CoronaListView/container/ListPage.container.js","webpack://CoronaStatics/./src/components/features/CoronaListView/container/ListPage.actions.js","webpack://CoronaStatics/./src/components/common/CoronaHeadlines/style.scss","webpack://CoronaStatics/./src/components/features/CoronaListView/style.scss","webpack://CoronaStatics/./src/components/common/CoronaHeadlines/style.scss?5bdd","webpack://CoronaStatics/./src/components/common/CoronaHeadlines/CoronaHeadlines.tsx"],"names":["connect","state","listData","globalData","dispatch","getListData","payload","type","LIST_PAGE_CONSTANTS","getListDataAction","history","page","setPage","rowsPerPage","setRowsPerPage","className","staticsData","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","slice","map","row","onClick","country","Country","push","pathname","search","hover","key","ID","scope","TotalConfirmed","TotalDeaths","TotalRecovered","TablePagination","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value","___CSS_LOADER_EXPORT___","module","id","props"],"mappings":"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","file":"797.bundle.js","sourcesContent":["import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { TableContainer, Table, Paper, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core'\nimport CoronaHeadLines from '../../common/CoronaHeadlines/CoronaHeadlines';\nimport \"./style.scss\";\nimport type { globalDataObject } from '../../common/CoronaHeadlines/CoronaHeadlines'\n\ntype ListProps = {\n    getListData: () => any;\n    listData: Array<Object>;\n    globalData: globalDataObject;\n}\n\ntype item = {\n    Country: string;\n    ID: string;\n    TotalConfirmed: number;\n    TotalDeaths: number;\n    TotalRecovered: number;\n}\n\nconst ListView = ({ getListData, listData = [], globalData }: ListProps) => {\n    React.useEffect(() => {\n        // Making call every time because we want real time data\n        getListData()\n        return () => null;\n    }, [])\n\n    let history = useHistory();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n    /**\n     * Returns type undefined\n     * @param {object,number} event Input htmlEvent newPage\n     */\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    /**\n     * Returns type undefined\n     * @param {object} event Input html event\n     */\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    /**\n     * Returns type undefined\n     * @param {string} country Input string\n     */\n    const countryClickHandler = (country: string) => {\n        history.push({ pathname: '/detail', search: `?query=${country}` });\n    }\n\n    return (<div className=\"list-view\">\n        <CoronaHeadLines staticsData={globalData} />\n        <TableContainer className=\"container\" component={Paper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Country</TableCell>\n                        <TableCell align=\"right\">Total Confirmed</TableCell>\n                        <TableCell align=\"right\">Total Deaths</TableCell>\n                        <TableCell align=\"right\">Total Recovered</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n\n                    {listData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row: item) => {\n                        return (\n                            <TableRow onClick={() => countryClickHandler(row.Country)} className=\"table-row\" hover key={row.ID}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.Country}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.TotalConfirmed}</TableCell>\n                                <TableCell align=\"right\">{row.TotalDeaths}</TableCell>\n                                <TableCell align=\"right\">{row.TotalRecovered}</TableCell>\n\n                            </TableRow>\n                        )\n                    })}\n\n                </TableBody>\n            </Table>\n        </TableContainer>\n        <TablePagination\n            component=\"div\"\n            count={listData.length || 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div >);\n}\n\nexport default ListView;","import { connect } from 'react-redux';\n\nimport { getListDataAction } from './ListPage.actions';\nimport { listData,globalData } from './ListPage.selectors';\nimport ListPage from '../CoronaListView';\n\nconst mapStateToProps = state => {\n  return {\n    listData: listData(state),\n    globalData: globalData(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      getListData: (payload) => {\n        dispatch(getListDataAction(payload));\n      },\n    };\n  };\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListPage);\n","import LIST_PAGE_CONSTANTS from './ListPage.constants.js';\n\nexport const getListDataAction = (payload) => {\n    return {\n      type: LIST_PAGE_CONSTANTS.GET_LIST_DATA,\n      payload\n    };\n  };\n\nexport const setListDataAction = (payload) => {\n    return {\n      type: LIST_PAGE_CONSTANTS.SET_LIST_DATA,\n      payload\n    };\n  };\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".global-counter{text-align:center}.global-counter__main-counter-wrap{margin-top:15px}.global-counter__main-counter-wrap h2{font-weight:300;font-size:40px;color:#555;margin:0}.global-counter__main-counter-number{font-weight:700;color:#696969;font-size:54px}.global-counter__main-counter-number.recovered{color:#8aca2b;margin-bottom:15px}.global-counter__total-cases{color:#aaa}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/common/CoronaHeadlines/style.scss\"],\"names\":[],\"mappings\":\"AAAA,gBACI,iBAAkB,CAClB,mCACE,eAAgB,CADjB,sCAGG,eAAgB,CAChB,cAAe,CACf,UAAW,CACX,QAAS,CACV,qCAGD,eAAgB,CAChB,aAAc,CACd,cAAe,CAHhB,+CAKG,aAAc,CACd,kBAAmB,CACpB,6BAGD,UAAW\",\"sourcesContent\":[\".global-counter {\\n    text-align: center;\\n    &__main-counter-wrap {\\n      margin-top: 15px;\\n      h2 {\\n        font-weight: 300;\\n        font-size: 40px;\\n        color: #555;\\n        margin: 0;\\n      }\\n    }\\n    &__main-counter-number {\\n      font-weight: 700;\\n      color: #696969;\\n      font-size: 54px;\\n      &.recovered {\\n        color: #8aca2b;\\n        margin-bottom: 15px;\\n      }\\n    }\\n    &__total-cases {\\n      color: #aaa;\\n    }\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".container{max-height:700px}.list-view{max-width:1440px;margin:0 auto}.table-row{cursor:pointer}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/features/CoronaListView/style.scss\"],\"names\":[],\"mappings\":\"AAAA,WACE,gBAAiB,CAClB,WAGC,gBAAiB,CACjB,aAAc,CACf,WAGC,cAAe\",\"sourcesContent\":[\".container {\\n  max-height: 700px;\\n}\\n\\n.list-view {\\n  max-width: 1440px;\\n  margin: 0 auto;\\n}\\n\\n.table-row {\\n  cursor: pointer;\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\nimport './style.scss';\n\ntype headLinesProps = {\n    staticsData: globalDataObject;\n}\n \ntype globalDataObject = {\n    TotalConfirmed: number;\n    TotalDeaths: number;\n    TotalRecovered: number;\n}\nconst CoronaHeadLines = (props: headLinesProps) => {\n    const { staticsData: { TotalConfirmed, TotalDeaths, TotalRecovered } = {} } = props;\n    return (\n        <div className=\"global-counter\">\n            <div className=\"global-counter__main-counter-wrap\">\n                <h1>Coronavirus Cases:</h1>\n                <div className=\"global-counter__main-counter-number\">\n                    <span className=\"global-counter__total-cases\">{TotalConfirmed}</span>\n\n                </div>\n            </div>\n            <div className=\"global-counter__main-counter-wrap\">\n                <h1>Deaths:</h1>\n                <div className=\"global-counter__main-counter-number\">\n\n                    <span>{TotalDeaths}</span>\n                </div>\n            </div>\n            <div className=\"global-counter__main-counter-wrap\">\n                <h1>Recovered:</h1>\n                <div className=\"global-counter__main-counter-number recovered\">\n                    <span>{TotalRecovered}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport type { globalDataObject }; // exported types  \nexport default CoronaHeadLines;\n"],"sourceRoot":""}